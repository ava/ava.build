{"version":3,"sources":["components/Center.js","utils.js","components/Peeled.js","components/Quote.js","components/Snowboard.js","components/Snowflakes.js","components/SocialLink.js","components/SocialMedia.js","App.js","serviceWorker.js","index.js"],"names":["Center","styled","div","_templateObject","sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","utils_templateObject","apply","arguments","PeelyContainer","p","Peeled_templateObject","beforeAfter","_templateObject2","Letter","span","_templateObject3","_templateObject4","props","children","color","Peeled","react_default","a","createElement","phrase","split","map","letter","i","key","toUpperCase","Quote","h3","Quote_templateObject","img","attrs","src","Snowboard_templateObject","Container","Snowflakes_templateObject","animSnowflakes","keyframes","Snowflakes_templateObject2","random","x","Math","floor","multipleBoxShadow","length","value","concat","_","Array","from","snowflakes","h","w","animationTime","shadow","Snowflakes_templateObject3","SmallSnowflakes","MediumSnowflakes","BigSnowflakes","Snowflakes","_ref","objectWithoutProperties","library","add","faFacebookSquare","faTwitterSquare","faStackOverflow","faGithubSquare","faLinkedin","faMediumM","faEnvelopeSquare","fontAwesomeStyles","facebook","twitter","email","stackoverflow","github","linkedin","medium","codepen","faCodepen","jsfiddle","faJsfiddle","colors","SocialLink","_ref$type","type","className","url","assign","href","target","rel","index_es","icon","size","SocialLink_templateObject","SocialMedia_templateObject","SocialMedia_templateObject2","SocialMedia","SocialMedia_Container","Col","App_templateObject","Row","App_templateObject2","Logo","window","location","origin","App_templateObject3","App","Snowflakes_Snowflakes","SocialMedia_SocialMedia","Peeled_Peeled","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.410853b3.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Center = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import { css } from 'styled-components'\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n}\n\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `\n  return acc\n}, {})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { media } from '../utils'\n\n/**\n * Peely Letters\n */\nconst PeelyContainer = styled.p`\n  color: rgb(65, 124, 59);\n  font-family: 'Montserrat', sans-serif;\n  font-size: 64px;\n  position: absolute;\n  bottom: -15px;\n  right: -5px;\n  margin: 0px;\n  & > span:first-child {\n    margin-left: 0;\n  }\n`\n\nconst beforeAfter = css`\n  display: block;\n  position: absolute;\n  top: 0;\n  left: -1px;\n  transform-origin: left top;\n  transition: all ease-out 0.25s;\n`\n\nconst Letter = styled.span`\n  ${media.phone`\n    font-size: 40px;\n  `}\n  display: inline-block;\n  position: relative;\n  transform-style: preserve-3d;\n  perspective: 500;\n  margin-left: .3em;\n  &:before {\n    ${beforeAfter}\n    z-index: 1;\n    color: rgba(0,0,0,0.2);\n    transform: scale(1.1, 1) skew(0deg, 20deg);\n    content: '${props => props.children}';\n  }\n  &:hover::before {\n    transform: scale(1.1, 1) skew(0deg, 5deg);\n  }\n  &:after {\n    ${beforeAfter}\n    z-index: 2;\n    color: ${props => props.color};\n    text-shadow: -1px 0 1px ${props => props.color}, 1px 0 1px rgba(0,0,0,0.8);\n    transform: rotateY(-40deg);\n    content: '${props => props.children}';\n  }\n  &:hover::after {\n   transform: rotateY(-10deg);\n  }\n`\n\nexport const Peeled = props => (\n  <PeelyContainer {...props}>\n    {(props.phrase || 'Peeled').split('').map((letter, i) => (\n      <Letter color={props.color || '#119711'} key={i}>{letter.toUpperCase()}</Letter>\n    ))}\n  </PeelyContainer>\n)","import styled from 'styled-components'\n\nexport const Quote = styled.h3`\n  /* font-family: Avenir Next, Helvetica Neue, Helvetica, Tahoma, sans-serif; */\n  font-family: 'Montserrat', sans-serif;\n  color: #fff;\n  margin: 10px 0 0 0;\n  font-size: 20px;\n`","import styled from 'styled-components'\n\nexport const Snowboard = styled.img.attrs({ src: 'https://i.postimg.cc/wvrH2KWs/snowboard.png' })`\n  height: 160px;\n`\n\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\n/**\n * Snowfall Background\n */\nconst Container = styled.div`\n  overflow: hidden;\n  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n  height: 100vh;\n  width: 100vw;\n`\nconst animSnowflakes = keyframes`\n  from { transform: translateY(-2000px); }\n  to { transform: translateY(0px); }\n`\nconst random = x => Math.floor(Math.random(x) * x)\nconst multipleBoxShadow = length => {\n  const biggestScreenSize = 2560\n  var value = `${random(biggestScreenSize)}px ${random(\n    biggestScreenSize\n  )}px #FFF`\n  for (var _ in Array.from({ length })) { // eslint-disable-line\n    value += `, ${random(biggestScreenSize)}px ${random(\n      biggestScreenSize\n    )}px #FFF`\n  }\n  return value\n}\nvar snowflakes = (h, w, animationTime, shadow) => styled.div`\n  width: ${w}px;\n  height: ${h}px;\n  background: transparent;\n  box-shadow: ${multipleBoxShadow(shadow)};\n  animation: ${animSnowflakes} ${animationTime}s linear infinite;\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 2000px;\n    width: ${w}px;\n    height: ${h}px;\n    box-shadow: ${multipleBoxShadow(shadow)};\n  }\n`\nconst SmallSnowflakes = snowflakes(1, 1, 50, 700)\nconst MediumSnowflakes = snowflakes(2, 2, 100, 200)\nconst BigSnowflakes = snowflakes(3, 3, 150, 100)\n\nexport const Snowflakes = ({ children, ...props }) => (\n  <Container {...props}>\n    {children}\n    <SmallSnowflakes />\n    <MediumSnowflakes />\n    <BigSnowflakes />\n  </Container>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faFacebookSquare, faTwitterSquare, faStackOverflow, faGithubSquare, faLinkedin, faCodepen, faJsfiddle, faMediumM } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelopeSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nlibrary.add(faFacebookSquare, faTwitterSquare, faStackOverflow, faGithubSquare, faLinkedin, faMediumM, faEnvelopeSquare);\n\nconst fontAwesomeStyles = {\n  facebook: faFacebookSquare,\n  twitter: faTwitterSquare,\n  // instagram: 'fab fa-instagram fa-3x social-ig',\n  email: faEnvelopeSquare,\n  stackoverflow: faStackOverflow,\n  github: faGithubSquare,\n  linkedin: faLinkedin,\n  medium: faMediumM,\n  codepen: faCodepen,\n  jsfiddle: faJsfiddle,\n}\n\nconst colors = {\n  facebook: '#3b5998',\n  twitter: '#00aced',\n  // instagram: 'fab fa-instagram fa-3x social-ig',\n  email: '#dd4b39',\n  stackoverflow: '#F48024',\n  github: '#F1502F',\n  linkedin: '#0077B5',\n  medium: '#03a87c',\n  codepen: '#76daff',\n  jsfiddle: '#0084ff',\n}\n\nexport const SocialLink = styled(({ type = 'facebook', className, url, ...props }) => (\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n    <Icon className={className} icon={fontAwesomeStyles[type]} size=\"2x\" />\n  </a>\n))`\n  color: white;\n  transform: scale(.8) !important;\n  transition: all .3s ease-in-out;\n\n  &:hover {\n    color: ${props => colors[props.type]};\n    transition: all .3s ease-in-out;\n    transform: scale(1.1) !important;\n  }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { SocialLink } from '.'\nimport { media } from '../utils'\n\nconst Container = styled.div`\n  position: absolute;\n  color: white;\n  ${media.phone`\n    display: flex;\n    margin: 8px;\n  `}\n  width: 50px;\n  margin: 8px 0;\n  text-align: center;\n`\n\nexport const SocialMedia = () => (\n  <Container>\n    <SocialLink type='github' url='https://github.com/avainc' />\n    <SocialLink type='linkedin' url='https://linkedin.com/company/avaassociates' />\n    {/* <SocialLink type='codepen' url='https://codepen.io/alex-cory/' /> */}\n    <SocialLink type='twitter' url='https://twitter.com/avaassociates' />\n    <SocialLink type='facebook' url='https://fb.com/avaassociates' />\n    {/* <SocialLink type='medium' url='https://medium.com/@alexcory' /> */}\n    {/* <SocialLink type='jsfiddle' url='https://jsfiddle.net/user/alexcory/fiddles/' /> */}\n    <SocialLink type='email' url='mailto:alex@ava.inc' />\n    {/* Runkit: https://runkit.com/alex-cory */}\n    {/* Codesandbox: https://codesandbox.io/u/alex-cory */}\n  </Container>\n)\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Snowflakes, Center, Peeled, Quote, SocialMedia } from \"./components\";\n\nconst App = () => {\n  return (\n    <Snowflakes>\n      <SocialMedia />\n      <Center>\n        <Col>\n          <Row>\n            <Logo />\n            <Peeled phrase=\"Ava\" color=\"rgb(137, 183, 44)\" />\n          </Row>\n          <Quote>Rapid Application Development</Quote>\n        </Col>\n      </Center>\n    </Snowflakes>\n  );\n};\n\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  position: relative;\n`;\nconst Logo = styled.img.attrs({\n  src: `${window.location.origin}/ava-logo-green.png`\n})`\n  width: 135px;\n  /* font-family: 'PT Sans'; */\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}